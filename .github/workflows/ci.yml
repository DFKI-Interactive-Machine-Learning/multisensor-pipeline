on:
  push:
  pull_request:

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Checkout Working Copy
        uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Setup Virtual Environment
        run: |
          python${{ matrix.py }} -m venv venv
          venv/bin/python -m pip install --upgrade -r requirements.d/venv.txt

      - name: Lint
        run: |
          venv/bin/python -m tox -e flake8

  test:
    name: test ${{ matrix.py }} on ${{ matrix.os }}
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - windows-latest
          # - macos-latest
        py:
          #- 3.6
          #- 3.7
          #- 3.8
          - 3.9
    steps:
      - name: Set up Python ${{ matrix.py }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}

      - name: Pick environment to run
        run: |
          python${{ matrix.py }} -c """
          import platform; import os; import sys; import codecs
          cpy = platform.python_implementation() == 'CPython'
          base =('{}{}{}' if cpy else '{}{}').format('py' if cpy else 'pypy', *sys.version_info[0:2])
          env = f'TOXENV={base}'
          print('Picked {} for {}'.format(env, sys.version))
          with codecs.open(os.environ['GITHUB_ENV'], 'a', 'utf-8') as file_handler:
               file_handler.write(f'{env}\n')
          """
        shell: bash

      - name: Install OS dependencies
        run: |
          apt update
          apt install --yes --no-install-recommends \
            ffmpeg \
            gcc \
            libgl1-mesa-glx \
            portaudio19-dev \
            xvfb

      - name: Checkout Working Copy
        uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Setup Virtual Environment
        run: |
          python${{ matrix.py }} -m venv venv
          venv/bin/python -m pip install --upgrade -r requirements.d/venv.txt

      - name: Tests
        run: |
          venv/bin/python -m tox -e $TOXENV
